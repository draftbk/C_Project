# -*- coding:utf-8 -*-
import os
import re
import random
import time
from random import choice
import shutil
import math
import Queue
from termcolor import *
import numpy
import matplotlib.pyplot as plt


def get_atom_by_id_and_name(id,name):
    f = open(name)
    strs = f.readlines()
    f.close()
    pattern = re.compile(r'\S+')
    xyz = re.findall(pattern, strs[id+11])
    return xyz

def find_direction_smalldirection_by_two_point(i,xyz_init,xyz_best):
    direction = 0
    direction_small = 0
    # 输出位置变动
    # print str(i)+","+str(float(xyz_best[0]) - float(xyz_init[0]))+","+str(float(xyz_best[1]) - float(xyz_init[1]))+","+str(float(xyz_best[2]) - float(xyz_init[2]))
    print str(i) + "," + str(round((float(xyz_best[0]) - float(xyz_init[0])) / 0.386,2)) + "," + str(round((float(xyz_best[1]) - float(xyz_init[1])) / 0.386,2)
        ) + "," + str(round((float(xyz_best[2]) - float(xyz_init[2])) / 0.386,2))
    # 输出在哪个象限
    if float(xyz_best[0]) - float(xyz_init[0]) > 0 and float(xyz_best[1]) - float(xyz_init[1]) > 0 and float(
            xyz_best[2]) - float(xyz_init[2]) > 0:
        direction = 1
    if float(xyz_best[0]) - float(xyz_init[0]) < 0 and float(xyz_best[1]) - float(xyz_init[1]) > 0 and float(
            xyz_best[2]) - float(xyz_init[2]) > 0:
        direction = 2
    if float(xyz_best[0]) - float(xyz_init[0]) > 0 and float(xyz_best[1]) - float(xyz_init[1]) < 0 and float(
            xyz_best[2]) - float(xyz_init[2]) > 0:
        direction = 3
    if float(xyz_best[0]) - float(xyz_init[0]) > 0 and float(xyz_best[1]) - float(xyz_init[1]) > 0 and float(
            xyz_best[2]) - float(xyz_init[2]) < 0:
        direction = 4
    if float(xyz_best[0]) - float(xyz_init[0]) < 0 and float(xyz_best[1]) - float(xyz_init[1]) < 0 and float(
            xyz_best[2]) - float(xyz_init[2]) > 0:
        direction = 5
    if float(xyz_best[0]) - float(xyz_init[0]) < 0 and float(xyz_best[1]) - float(xyz_init[1]) > 0 and float(
            xyz_best[2]) - float(xyz_init[2]) < 0:
        direction = 6
    if float(xyz_best[0]) - float(xyz_init[0]) > 0 and float(xyz_best[1]) - float(xyz_init[1]) < 0 and float(
            xyz_best[2]) - float(xyz_init[2]) < 0:
        direction = 7
    if float(xyz_best[0]) - float(xyz_init[0]) < 0 and float(xyz_best[1]) - float(xyz_init[1]) < 0 and float(
            xyz_best[2]) - float(xyz_init[2]) < 0:
        direction = 8
    k=0.4
    # 输出在哪个小象限
    if abs(float(xyz_best[0]) - float(xyz_init[0])) > k and abs(float(xyz_best[1]) - float(xyz_init[1])) > k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) > k:
        direction_small = 1
    if abs(float(xyz_best[0]) - float(xyz_init[0])) <= k and abs(float(xyz_best[1]) - float(xyz_init[1])) > k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) > k:
        direction_small = 2
    if abs(float(xyz_best[0]) - float(xyz_init[0])) > k and abs(float(xyz_best[1]) - float(xyz_init[1])) <= k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) > k:
        direction_small = 3
    if abs(float(xyz_best[0]) - float(xyz_init[0])) > k and abs(float(xyz_best[1]) - float(xyz_init[1])) > k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) <= k:
        direction_small = 4
    if abs(float(xyz_best[0]) - float(xyz_init[0])) <= k and abs(float(xyz_best[1]) - float(xyz_init[1])) <= k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) > k:
        direction_small = 5
    if abs(float(xyz_best[0]) - float(xyz_init[0])) <= k and abs(float(xyz_best[1]) - float(xyz_init[1])) > k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) <= k:
        direction_small = 6
    if abs(float(xyz_best[0]) - float(xyz_init[0])) > k and abs(float(xyz_best[1]) - float(xyz_init[1])) <= k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) <= k:
        direction_small = 7
    if abs(float(xyz_best[0]) - float(xyz_init[0])) <= k and abs(float(xyz_best[1]) - float(xyz_init[1])) <= k and abs(
                    float(xyz_best[2]) - float(xyz_init[2])) <= k:
        direction_small = 8
    return direction, direction_small


def find_direction_smalldirection(init_point_list):
    directions = []
    direction_smalls = []
    for i in init_point_list:
        xyz_init = get_atom_by_id_and_name(i,'coo_init')
        xyz_best = get_atom_by_id_and_name(i,'coo_-156')
        direction, direction_small=find_direction_smalldirection_by_two_point(i,xyz_init[2:], xyz_best[2:])
        # 保存方向
        directions.append(direction)
        direction_smalls.append(direction_small)
    return directions, direction_smalls

def change_to_form():
    f = open('init_coo_opted4')
    strs = f.readlines()
    f.close()
    pattern = re.compile(r'\S+')
    j=0
    for i in strs:
        j=j+1
        xyz = re.findall(pattern, i)
        print str(j)+" "+"1"+" "+xyz[0]+" "+xyz[1]+" "+xyz[2]

def drawLineText():
    x=[ ]
    y=['-832.96909', '-839.39184', '-847.86365', '-851.13658', '-850.84301', '-855.1542', '-859.75386', '-863.73355', '-865.22828', '-871.26095', '-878.56933', '-879.66899', '-885.24305', '-888.40204', '-895.3063', '-896.48864', '-899.46581', '-900.981', '-906.08918', '-909.09149', '-912.55044', '-912.19289', '-914.9049', '-915.79426', '-918.6128', '-923.17698', '-924.02795', '-929.08741', '-923.72453', '-925.01275', '-928.57953', '-930.91474', '-934.54299', '-937.2325', '-941.30947', '-942.82855', '-945.36502', '-948.11107', '-953.52372', '-955.4787', '-965.41879', '-970.03146', '-967.79593', '-972.07126', '-970.08178', '-971.69166', '-972.35311', '-969.39832', '-970.2437', '-964.07367', '-965.5584', '-961.85615', '-966.80879', '-969.3677', '-968.36706', '-966.23793', '-963.40245', '-962.46564', '-955.88486', '-960.79767', '-961.8615', '-958.42501', '-962.91366', '-962.53369', '-965.90672', '-971.19776', '-970.79961', '-968.34604', '-970.46314', '-973.08239', '-976.78865', '-974.42655', '-969.69577', '-971.57414', '-974.36033', '-972.20128', '-972.62584', '-966.9895', '-971.26732', '-969.1946', '-965.67098', '-966.53546', '-968.0968', '-967.59378', '-972.10398', '-975.2065', '-974.15632', '-975.62884', '-981.0369', '-983.73638', '-986.8482', '-989.5664', '-995.15596', '-1000.3966', '-996.75634', '-1003.8312', '-1005.6212', '-1007.6134', '-1006.9098', '-1004.1827', '-1005.1371', '-1006.8378', '-1009.3409', '-1010.0697', '-1007.3398', '-1010.4921', '-1010.4585', '-1010.7289', '-1015.4938', '-1019.991', '-1024.0988', '-1021.8919', '-1023.6899', '-1021.5231', '-1024.3328', '-1023.7085', '-1029.1977', '-1020.4874', '-1010.1706', '-1009.2417', '-1007.8345', '-1006.8774', '-1009.8011', '-1008.9723', '-1010.1169', '-1014.5519', '-1010.7024', '-1009.416', '-1016.55', '-1017.3918', '-1016.9977', '-1021.3435', '-1018.1543', '-1018.426', '-1021.9732', '-1019.1322', '-1020.7671', '-1020.3176', '-1018.6888', '-1015.0453', '-1014.6219', '-1014.5884', '-1011.8037', '-1020.2245', '-1028.2697', '-1028.4854', '-1027.3494', '-1027.1502', '-1028.4122', '-1030.808', '-1023.6707', '-1028.2323', '-1027.7774', '-1030.7368', '-1025.8154', '-1024.1096', '-1020.2858', '-1016.6306', '-1018.4634', '-1011.9609', '-1014.018', '-1012.909', '-1017.9535', '-1018.0124', '-1014.0777', '-1013.3092', '-1016.5799', '-1016.2856', '-1014.4979', '-1014.0058', '-1019.223', '-1016.7057', '-1016.2642', '-1013.13', '-1010.1612', '-1016.1101', '-1018.2657', '-1020.2453', '-1024.843', '-1020.2579', '-1022.356', '-1025.1889', '-1027.9498', '-1029.528', '-1027.2525', '-1032.5483', '-1034.5206', '-1035.5502', '-1027.1063', '-1027.6386', '-1019.5111', '-1015.3398', '-1015.593', '-1016.4859', '-1017.3324', '-1020.8125', '-1021.0702', '-1022.2776', '-1019.7498', '-1024.1481', '-1025.2476', '-1026.1737', '-1031.5743', '-1037.6798', '-1038.1207', '-1029.3369', '-1031.6654', '-1032.1396', '-1034.9232', '-1029.1352', '-1038.547', '-1037.8897', '-1035.1865', '-1032.5268', '-1034.9858', '-1036.2519', '-1043.628', '-1050.2146', '-1049.7497', '-1051.1308', '-1043.362', '-1044.5995', '-1043.4294', '-1044.0871', '-1045.4979', '-1046.2829', '-1048.5939', '-1049.4829', '-1047.1667', '-1047.0514', '-1049.442', '-1051.981', '-1050.9765', '-1052.3592', '-1049.7523', '-1045.9579', '-1050.1451', '-1044.342', '-1048.202', '-1049.593', '-1047.8055', '-1047.7248', '-1051.256', '-1052.0541', '-1053.2169', '-1048.983', '-1052.1152', '-1050.4948', '-1053.1535', '-1051.6383', '-1049.3841', '-1050.9921', '-1062.3018', '-1064.726', '-1069.6676', '-1067.5093', '-1066.4335', '-1054.4606', '-1053.8224', '-1056.0298', '-1056.3744', '-1056.0383', '-1058.0707', '-1057.6639', '-1056.3102', '-1056.1979', '-1052.1973', '-1051.67', '-1052.4817', '-1048.6386', '-1048.6876', '-1050.756', '-1048.9426', '-1049.0039', '-1049.5848', '-1048.9614', '-1044.6398', '-1049.5626', '-1051.0948', '-1051.8806', '-1050.807', '-1049.9187', '-1051.5256', '-1057.3111', '-1057.7952', '-1061.8321', '-1061.0996', '-1063.2008', '-1063.3559', '-1066.3511', '-1069.1828', '-1070.8365', '-1071.6332', '-1070.6966', '-1067.0655', '-1064.2518', '-1058.7329', '-1063.8979', '-1063.8287', '-1065.8624', '-1068.9061', '-1068.3518', '-1063.5879', '-1062.6129', '-1063.598', '-1063.7198', '-1060.8615', '-1061.2145', '-1060.9698', '-1064.0083', '-1065.4139', '-1065.9802', '-1065.3754', '-1065.42', '-1068.458', '-1072.4451', '-1072.9282', '-1076.3013', '-1074.1777', '-1074.4964', '-1075.5043', '-1074.199', '-1074.5695', '-1073.8526', '-1071.648', '-1073.8336', '-1074.8574', '-1075.1614', '-1070.8259', '-1073.1072', '-1071.9351', '-1073.1326', '-1069.85', '-1068.9521', '-1070.3664', '-1069.3823', '-1071.3126', '-1069.8971', '-1065.9442', '-1067.1856', '-1059.3912', '-1057.9824', '-1051.6745', '-1051.4372', '-1053.2993', '-1054.681', '-1052.3727', '-1052.6877', '-1052.5237', '-1054.0079', '-1053.4457', '-1053.0831', '-1053.268', '-1060.5727', '-1060.6867', '-1059.1118', '-1053.8202', '-1055.4346', '-1055.4213', '-1055.0637', '-1045.1983', '-1048.2239', '-1050.0597', '-1048.1863', '-1054.3972', '-1054.8043']
    y1 = ['-469.94839', '-472.9787', '-474.55413', '-470.46017', '-468.37582', '-474.39007', '-479.27519', '-467.12349', '-449.84301', '-458.77648', '-465.77154', '-462.98696', '-466.37437', '-470.14882', '-465.72371', '-460.5401', '-468.76941', '-472.27377', '-478.05601', '-484.18053', '-491.14744', '-488.96411', '-490.08973', '-482.50405', '-484.43662', '-489.69638', '-496.255', '-496.35917', '-507.63502', '-510.569', '-505.69573', '-518.19255', '-517.45194', '-516.5129', '-520.09541', '-526.68529', '-533.94911', '-512.01331', '-519.34098', '-519.45681', '-518.80819', '-519.97184', '-529.03621', '-526.23739', '-531.20085', '-537.8337', '-533.0051', '-530.82174', '-531.20323', '-530.51392', '-530.2139', '-514.8295', '-487.40849', '-488.11225', '-487.81294', '-494.71075', '-494.72614', '-490.05719', '-487.1711', '-495.19928', '-492.26402', '-493.1051', '-495.87613', '-496.57849', '-489.75667', '-494.50029', '-488.61661', '-497.65074', '-499.52095', '-500.99085', '-503.78782', '-490.70624', '-491.79686', '-487.81629', '-492.0039', '-486.08301', '-484.75857', '-489.09744', '-496.15471', '-497.52738', '-503.60532', '-504.25506', '-504.55489', '-509.20084', '-514.30565', '-513.36809', '-515.78173', '-513.34879', '-508.26222', '-508.37572', '-513.50013', '-516.03837', '-509.41994', '-513.87895', '-510.36081', '-514.70971', '-520.73926', '-523.08488', '-522.35848', '-523.40473', '-522.6384', '-528.70171', '-535.28193', '-539.46921', '-536.91317', '-551.83696', '-550.76091', '-538.44321', '-536.84247', '-538.44338', '-548.56868', '-549.34207', '-545.02688', '-538.14834', '-538.81481', '-542.69908', '-545.43512', '-547.66848', '-545.57098', '-540.39502', '-540.20475', '-543.10052', '-543.54497', '-538.21395', '-542.18613', '-539.6847', '-535.01285', '-534.46732', '-537.06048', '-531.85081', '-526.82831', '-530.63438', '-527.66644', '-526.45025', '-526.04893', '-528.35997', '-532.79857', '-532.40959', '-530.36631', '-526.40705', '-531.61701', '-524.3791', '-525.64033', '-510.21024', '-516.84305', '-521.94101', '-520.33161', '-520.33133', '-521.64812', '-521.18346', '-520.36195', '-524.11347', '-516.73378', '-518.17018', '-523.75989', '-520.42853', '-524.63215', '-525.06863', '-531.36598', '-536.70506', '-542.83999', '-540.90174', '-538.12509', '-545.68632', '-544.25625', '-545.37242', '-549.57994', '-571.28924', '-571.91379', '-570.81231', '-569.02041', '-569.15577', '-570.88493', '-565.15159', '-562.79993', '-565.32812', '-571.25278', '-569.55148', '-573.21853', '-569.84194', '-562.21157', '-562.37728', '-563.87112', '-558.70301', '-554.74417', '-555.03283', '-560.80437', '-551.01467', '-546.28659', '-550.33003', '-543.3591', '-546.5673', '-550.38333', '-546.52616', '-552.44605', '-558.04159', '-552.72146', '-566.14846', '-559.65871', '-567.597', '-569.80302', '-566.4847', '-564.65646', '-566.51867', '-561.63906', '-562.69225', '-563.84451', '-564.80367', '-567.63591', '-581.31071', '-599.70055', '-610.40147', '-609.60671', '-610.13182', '-620.20676', '-617.97481', '-622.01115', '-622.40645', '-622.41558', '-623.93104', '-622.43766', '-619.81041', '-619.01109', '-621.83085', '-624.89078', '-619.67377', '-622.72834', '-619.20724', '-619.80307', '-620.52319', '-620.34065', '-622.48823', '-621.76056', '-621.22658', '-611.80722', '-604.21973', '-606.37169', '-632.06756', '-636.00985', '-633.2356', '-631.71015', '-632.12615', '-640.1615', '-636.82687', '-637.69241', '-651.27681', '-651.30863', '-648.80903', '-645.9465', '-650.67529', '-648.85802', '-654.19475', '-657.8481', '-659.77911', '-664.48372', '-670.61395', '-673.85762', '-674.7779', '-670.99223', '-677.19182', '-675.18571', '-672.25476', '-673.21128', '-674.02746', '-673.93736', '-674.0606', '-664.58081', '-666.47514', '-667.70436', '-664.57368', '-662.35322', '-667.48857', '-669.0264', '-666.77415', '-665.35818', '-675.02983', '-670.03513', '-672.12754', '-671.8617', '-670.08179', '-668.62528', '-672.02424', '-670.81314', '-677.0097', '-674.16186', '-677.45439', '-678.77064', '-679.27726', '-675.12454', '-677.01247', '-680.27281', '-683.03637', '-682.66649', '-680.4689', '-676.65231', '-683.24157', '-678.2184', '-683.05595', '-684.89625', '-684.81637', '-684.12291', '-674.86312', '-677.68137', '-678.5334', '-681.36988', '-681.36038', '-678.19608', '-682.06334', '-680.44948', '-679.61973', '-688.80312', '-688.2015', '-686.56133', '-680.5158', '-677.85584', '-681.97433', '-682.43039', '-678.69261', '-686.15682', '-685.86486', '-682.73394', '-686.11665', '-687.24539', '-686.35368', '-685.37509', '-689.8389', '-689.19247', '-690.86373', '-692.47784', '-694.34226', '-688.49606', '-692.36553', '-687.15098', '-673.65504', '-673.66708', '-673.25473', '-674.24348', '-671.18225', '-669.92075', '-665.8051', '-663.89737', '-644.8937', '-638.72319', '-640.66338', '-642.37445', '-642.42991', '-641.24344', '-642.67756', '-642.87336', '-637.8343', '-635.82345', '-628.94089', '-629.70036', '-635.31723', '-634.95699', '-634.53855', '-634.84978', '-637.00568', '-633.98834', '-630.52559', '-626.06142', '-628.77664', '-639.17463', '-638.00737', '-639.45477', '-639.34086']
    for i in range(len(y)):
        y[i]=float(y[i])
        y1[i] = float(y1[i])
        x.append(i)

    plt.figure(figsize=(8, 4))  # 创建绘图对象
    plt.plot(x, y, "b--", linewidth=1)  # 在当前绘图对象绘图（X轴，Y轴，蓝色虚线，线宽度）
    plt.plot(x, y1, "r--", linewidth=1)  # 在当前绘图对象绘图（X轴，Y轴，蓝色虚线，线宽度）
    plt.xlabel("Time(s)")  # X轴标签
    plt.ylabel("Energy")  # Y轴标签
    plt.title("energy line")  # 图标题
    plt.show()  # 显示图

def get_xyz_after_optimization(lastNUmber):
    f = open('out.xyz')
    strs = f.readlines()
    f.close()
    j=0
    pattern = re.compile(r'\S+')
    for i in strs[-lastNUmber:]:
        j=j+1
        xyz = re.findall(pattern, i)
        print str(j) + " " + "1" + " " + xyz[1] + " " + xyz[2] + " " + xyz[3]


def main():
    drawLineText()
    # change_to_form()
    # print "0"
    # init_point_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
    # find_direction_smalldirection(init_point_list)
    # print math.sqrt((4.186-6.996)*(4.186-6.996)+(5.118-7.764)*(5.118-7.764)+(6.729-6.781)*(6.729-6.781))
    print ""
    # get_xyz_after_optimization(256)

main()